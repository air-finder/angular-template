name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        
      # - name: Run tests with coverage
      #   run: npm run test -- --coverage

      # - name: Check test coverage
      #   run: |
      #     COVERAGE=$(grep -Po '"branches": \{\K[^}]*' coverage/coverage-summary.json | grep -Po '"pct": \K[0-9.]+')
      #     echo "Current coverage: $COVERAGE%"
      #     if (( $(echo "$COVERAGE < 70" | bc -l) )); then
      #       echo "Test coverage is below 70%!";
      #       exit 1;
      #     fi

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build Docker image
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          docker build . -t brunovbs/$REPO_NAME-dev:latest

      - name: Publish Docker image
        run: |
          docker login -u brunovbs -p ${{ secrets.DOCKER_HUB_TOKEN }}
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          docker push brunovbs/$REPO_NAME-dev:latest